@model Web.Models.Rede

@{
    // Helper to determine the icon based on device type
    Func<string, string> GetIconClass = (type) =>
    {
        switch (type?.ToLower())
        {
            case "roteador":
                return "bi-router-fill";
            case "switch":
                return "bi-hdd-stack-fill";
            case "servidor":
                return "bi-server";
            case "ap":
                return "bi-wifi";
            default:
                return "bi-diagram-3";
        }
    };
}

<li id="rede-@Model.Id" class="tree-node">
    <div class="node-content">
        <span class="node-toggle @(Model.Children.Any() ? "" : "invisible")">
            <i class="bi bi-chevron-right"></i>
        </span>
        <span class="node-icon">
            <i class="bi @GetIconClass(Model.Tipo)"></i>
        </span>
        <span class="node-name">
            @Model.Nome
            <small class="text-muted">(@Model.IP)</small>
        </span>
        <span class="node-status ms-auto">
            <span class="status-indicator @(Model.Status?.ToLower() ?? "gray")" title="@(Model.Status ?? "N/A")"></span>
            <span class="loss-percentage-cell">@Model.LossPercentage.ToString("F2")%</span>
        </span>
    </div>
    @if (Model.Children.Any())
    {
        <ul class="nested">
            @foreach (var child in Model.Children.OrderBy(c => c.Nome))
            {
                <partial name="_RedeNode" model="child" />
            }
        </ul>
    }
</li>
