@model IEnumerable<Web.Models.Rede>

@{
    ViewData["Title"] = "Monitoramento de Rede";
    var tiposDeDispositivo = ViewBag.TiposDeDispositivo as List<string> ?? new List<string>();
    var selectedTipo = ViewBag.SelectedTipo as string;
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-6">
        <h2>Tempo de Análise: <span id="uptime">00.00:00:00</span></h2>
    </div>
    <div class="col-md-6">
        <form asp-action="Index" method="get" class="form-inline float-md-right">
            <div class="form-group">
                <label for="tipo" class="mr-2">Filtrar por tipo:</label>
                <select name="tipo" id="tipo" class="form-control mr-2" onchange="this.form.submit()">
                    <option value="">Todos</option>
                    @foreach (var tipo in tiposDeDispositivo)
                    {
                        <option value="@tipo" selected="@(tipo == selectedTipo)">@tipo</option>
                    }
                </select>
            </div>
        </form>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Nome)</th>
            <th>@Html.DisplayNameFor(model => model.IP)</th>
            <th>@Html.DisplayNameFor(model => model.Tipo)</th>
            <th>Status</th>
            <th>Pings</th>
            <th>Perda (%)</th>
            <th>Latência Média (ms)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr id="rede-@item.Id">
                <td>@Html.DisplayFor(modelItem => item.Nome)</td>
                <td>@Html.DisplayFor(modelItem => item.IP)</td>
                <td>@Html.DisplayFor(modelItem => item.Tipo)</td>
                <td class="status-cell">
                    <span class="status-indicator @(item.Status?.ToLower() ?? "gray")"></span>
                    <span class="status-text">@(item.Status ?? "N/A")</span>
                </td>
                <td class="ping-count-cell">@item.PingCount</td>
                <td class="loss-percentage-cell">@item.LossPercentage.ToString("F2")%</td>
                <td class="latency-cell">@item.AverageLatency.ToString("F0") ms</td>
            </tr>
        }
    </tbody>
</table>

@section Styles {
    <style>
        .status-indicator {
            display: inline-block;
            width: 15px;
            height: 15px;
            border-radius: 50%;
            margin-right: 5px;
        }

        .status-indicator.green {
            background-color: green;
        }

        .status-indicator.yellow {
            background-color: yellow;
        }

        .status-indicator.red {
            background-color: red;
        }

        .status-indicator.gray {
            background-color: gray;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            function updateStatus() {
                $.get('@Url.Action("GetStatus", "Monitoramento")', function (data) {
                    data.forEach(function (item) {
                        var row = $('#rede-' + item.id);
                        var statusCell = row.find('.status-cell');
                        var indicator = statusCell.find('.status-indicator');
                        var text = statusCell.find('.status-text');
                        var lossCell = row.find('.loss-percentage-cell');
                        var pingCell = row.find('.ping-count-cell');
                        var latencyCell = row.find('.latency-cell');

                        var statusClass = item.status ? item.status.toLowerCase() : 'gray';
                        indicator.removeClass('green yellow red gray').addClass(statusClass);
                        text.text(item.status || 'N/A');

                        lossCell.text(item.lossPercentage.toFixed(2) + '%');
                        pingCell.text(item.pingCount);
                        latencyCell.text(item.averageLatency.toFixed(0) + ' ms');
                    });
                });
            }

            function updateUptime() {
                $.get('@Url.Action("GetUptime", "Monitoramento")', function (data) {
                    $('#uptime').text(data.uptime);
                });
            }

            setInterval(updateStatus, 15000); // 15 seconds
            updateStatus(); // Also update on page load

            setInterval(updateUptime, 1000); // 1 second
            updateUptime(); // Also update on page load
        });
    </script>
}
