@model IEnumerable<Web.Models.Rede>

@{
    ViewData["Title"] = "Monitoramento de Rede Hierárquico";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1>@ViewData["Title"]</h1>
    <div class="text-end">
        <strong>Tempo de Análise:</strong> <span id="uptime">00.00:00:00</span>
    </div>
</div>

<div class="card">
    <div class="card-body">
        <ul id="network-tree">
            @foreach (var rootNode in Model.OrderBy(n => n.Nome))
            {
                <partial name="_RedeNode" model="rootNode" />
            }
        </ul>
    </div>
</div>


@section Styles {
    <style>
        #network-tree, .nested {
            list-style-type: none;
            padding-left: 0;
        }

        .nested {
            padding-left: 40px; /* Indentation for children */
            display: none; /* Collapsed by default */
        }

        #network-tree {
            padding-left: 20px;
        }

        .node-content {
            display: flex;
            align-items: center;
            padding: 8px;
            border-radius: 5px;
            transition: background-color 0.2s ease-in-out;
        }

        .node-content:hover {
            background-color: #f8f9fa;
        }

        .node-toggle {
            cursor: pointer;
            width: 20px;
            text-align: center;
            margin-right: 10px;
            transition: transform 0.2s;
        }

        .node-toggle.expanded .bi-chevron-right {
            transform: rotate(90deg);
        }

        .node-icon {
            font-size: 1.2rem;
            width: 30px;
            text-align: center;
            margin-right: 10px;
        }

        .node-name {
            font-weight: 500;
        }

        .node-status {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .status-indicator {
            display: inline-block;
            width: 15px;
            height: 15px;
            border-radius: 50%;
            border: 1px solid rgba(0,0,0,0.1);
        }

        .status-indicator.online, .status-indicator.green { background-color: #28a745; }
        .status-indicator.offline, .status-indicator.red { background-color: #dc3545; }
        .status-indicator.latency, .status-indicator.yellow { background-color: #ffc107; }
        .status-indicator.unknown, .status-indicator.gray { background-color: #6c757d; }

        /* Tree lines - more robust approach */
        .tree-node {
            position: relative;
            padding-left: 25px;
        }

        /* The vertical line */
        .tree-node::before {
            content: "";
            position: absolute;
            top: 0;
            left: 10px;
            width: 1px;
            height: 100%;
            background-color: #dee2e6;
        }

        /* The horizontal L-shaped line */
        .tree-node .node-content::before {
            content: "";
            position: absolute;
            top: 20px;
            left: 11px;
            width: 14px;
            height: 1px;
            background-color: #dee2e6;
        }

        /* Remove the line for root nodes */
        #network-tree > .tree-node {
            padding-left: 0;
        }
        #network-tree > .tree-node::before,
        #network-tree > .tree-node > .node-content::before {
            display: none;
        }

        /* Remove the hanging line from the last child of a branch */
        .tree-node:last-child::before {
            height: 20px;
        }

    </style>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            // Toggle for expand/collapse
            $('#network-tree').on('click', '.node-toggle', function (e) {
                e.stopPropagation();
                $(this).toggleClass('expanded');
                $(this).closest('li').children('.nested').slideToggle('fast');
            });

            function updateStatus() {
                $.get('@Url.Action("GetStatus", "Monitoramento")', function (data) {
                    data.forEach(function (item) {
                        var nodeLi = $('#rede-' + item.id);
                        if (nodeLi.length === 0) return;

                        var indicator = nodeLi.find('.status-indicator');
                        var lossCell = nodeLi.find('.loss-percentage-cell');

                        var statusClass = item.status ? item.status.toLowerCase() : 'gray';

                        indicator.removeClass('online offline latency unknown green red yellow gray').addClass(statusClass);
                        indicator.attr('title', item.status || 'N/A');
                        lossCell.text(item.lossPercentage.toFixed(2) + '%');
                    });
                });
            }

            function updateUptime() {
                $.get('@Url.Action("GetUptime", "Monitoramento")', function (data) {
                    $('#uptime').text(data.uptime);
                });
            }

            // Initial and periodic updates
            setInterval(updateStatus, 15000);
            updateStatus();

            setInterval(updateUptime, 1000);
            updateUptime();
        });
    </script>
}
