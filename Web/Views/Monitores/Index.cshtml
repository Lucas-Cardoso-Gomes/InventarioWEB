@model Web.Models.MonitorIndexViewModel

@{
    ViewData["Title"] = "Monitores";
}

<h1>Monitores</h1>

<div class="row mb-3">
    <div class="col-12">
        @if (User.IsInRole("Admin") || User.IsInRole("Coordenador"))
        {
            <a asp-action="Create" class="btn btn-primary">Adicionar Novo Monitor</a>
        }
    </div>
</div>

<form asp-action="Index" method="get" class="card mb-4">
    <div class="card-header">
        Filtros
    </div>
    <div class="card-body">
        <div class="row g-3">
            <div class="col-md-12">
                <label class="form-label">Procurar</label>
                <input type="text" name="SearchString" value="@Model.SearchString" class="form-control" />
            </div>
            @{
                Action<string, string, List<string>, List<string>> renderFilter = (title, name, items, selectedItems) =>
                {
                    <div class="col-md-4">
                        <label class="form-label">@title</label>
                        <div class="border rounded p-2" style="height: 150px; overflow-y: auto;">
                            @if (items != null)
                            {
                                @foreach (var item in items)
                                {
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="@name" value="@item" id="@(name)-@item.Replace(" ", "-")" @(selectedItems.Contains(item) ? "checked" : "")>
                                        <label class="form-check-label" for="@(name)-@item.Replace(" ", "-")">
                                            @item
                                        </label>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                };

                renderFilter("Marca", "currentMarcas", Model.Marcas, Model.CurrentMarcas);
                renderFilter("Tamanho", "currentTamanhos", Model.Tamanhos, Model.CurrentTamanhos);
                renderFilter("Modelo", "currentModelos", Model.Modelos, Model.CurrentModelos);
            }
        </div>
    </div>
    <div class="card-footer text-end">
        <a asp-action="Index" class="btn btn-secondary">Limpar Filtros</a>
        <button type="submit" class="btn btn-primary">Aplicar Filtros</button>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Monitores.FirstOrDefault().PartNumber)</th>
                <th>Usuário</th>
                <th>@Html.DisplayNameFor(model => model.Monitores.FirstOrDefault().Marca)</th>
                <th>@Html.DisplayNameFor(model => model.Monitores.FirstOrDefault().Modelo)</th>
                <th>@Html.DisplayNameFor(model => model.Monitores.FirstOrDefault().Tamanho)</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Monitores)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.PartNumber)</td>
                    <td>@Html.DisplayFor(modelItem => item.User.Nome)</td>
                    <td>@Html.DisplayFor(modelItem => item.Marca)</td>
                    <td>@Html.DisplayFor(modelItem => item.Modelo)</td>
                    <td>@Html.DisplayFor(modelItem => item.Tamanho)</td>
                    <td>
                        @if (User.IsInRole("Admin") || User.IsInRole("Coordenador"))
                        {
                            <a asp-action="Edit" asp-route-id="@item.PartNumber" class="btn btn-warning btn-sm">Editar</a>
                            <a asp-action="Delete" asp-route-id="@item.PartNumber" class="btn btn-danger btn-sm">Excluir</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="pagination">
    Página @Model.PageNumber de @Model.TotalPages
    @if (Model.HasPreviousPage)
    {
        <a href="@Url.Action("Index", new { pageNumber = Model.PageNumber - 1, pageSize = Model.PageSize, searchString = Model.SearchString, currentMarcas = Model.CurrentMarcas, currentTamanhos = Model.CurrentTamanhos, currentModelos = Model.CurrentModelos })" class="btn btn-default">
            &laquo; Anterior
        </a>
    }
    @if (Model.HasNextPage)
    {
        <a href="@Url.Action("Index", new { pageNumber = Model.PageNumber + 1, pageSize = Model.PageSize, searchString = Model.SearchString, currentMarcas = Model.CurrentMarcas, currentTamanhos = Model.CurrentTamanhos, currentModelos = Model.CurrentModelos })" class="btn btn-default">
            Próximo &raquo;
        </a>
    }
</div>
