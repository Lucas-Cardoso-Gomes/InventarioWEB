@model Web.Models.ChamadoDashboardViewModel
@{
    ViewData["Title"] = "Dashboard de Chamados";
}

<div class="container-fluid">
    <div class="card mb-4">
        <div class="card-header">
            Filtros
        </div>
        <div class="card-body">
            <form asp-action="Dashboard" method="get">
                <div class="row">
                    <div class="col-md-3">
                        <label for="startDate">Data Início</label>
                        <input type="date" id="startDate" name="startDate" class="form-control" value="@(ViewBag.StartDate?.ToString("yyyy-MM-dd"))">
                    </div>
                    <div class="col-md-3">
                        <label for="endDate">Data Fim</label>
                        <input type="date" id="endDate" name="endDate" class="form-control" value="@(ViewBag.EndDate?.ToString("yyyy-MM-dd"))">
                    </div>
                    <div class="col-md-2">
                        <label for="year">Ano</label>
                        <input type="number" id="year" name="year" class="form-control" value="@ViewBag.Year">
                    </div>
                    <div class="col-md-2">
                        <label for="month">Mês</label>
                        <input type="number" id="month" name="month" class="form-control" value="@ViewBag.Month">
                    </div>
                    <div class="col-md-2">
                        <label for="day">Dia</label>
                        <input type="number" id="day" name="day" class="form-control" value="@ViewBag.Day">
                    </div>
                </div>
                <div class="mt-3">
                    <button type="submit" class="btn btn-primary">Filtrar</button>
                    <a asp-action="Dashboard" class="btn btn-secondary">Limpar</a>
                </div>
            </form>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-3 col-md-6">
            <div class="card text-white bg-info mb-3">
                <div class="card-header">Total de Chamados</div>
                <div class="card-body">
                    <h4 class="card-title">@Model.TotalChamados</h4>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="card text-white bg-success mb-3">
                <div class="card-header">Chamados Abertos</div>
                <div class="card-body">
                    <h4 class="card-title">@Model.ChamadosAbertos</h4>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="card text-white bg-warning mb-3">
                <div class="card-header">Chamados Em Andamento</div>
                <div class="card-body">
                    <h4 class="card-title">@Model.ChamadosEmAndamento</h4>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="card text-white bg-secondary mb-3">
                <div class="card-header">Chamados Fechados</div>
                <div class="card-body">
                    <h4 class="card-title">@Model.ChamadosFechados</h4>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">Top 10 Serviços</div>
                <div class="card-body" id="top10ServicosContainer">
                    <canvas id="top10ServicosChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">Top 10 Usuários que Mais Abriram Chamados</div>
                <div class="card-body" id="top10UsuariosContainer">
                    <canvas id="top10UsuariosChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">Top Dias da Semana de Abertura de Chamados</div>
                <div class="card-body" id="chamadosPorDiaDaSemanaContainer">
                    <canvas id="chamadosPorDiaDaSemanaChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">Horário Médio de Abertura de Chamados</div>
                <div class="card-body" id="horarioMedioAberturaContainer">
                    <canvas id="horarioMedioAberturaChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">Prioridade dos Serviços</div>
                <div class="card-body" id="prioridadeServicosContainer">
                    <canvas id="prioridadeServicosChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">Filiais que Mais Abrem Chamados</div>
                <div class="card-body" id="chamadosPorFilialContainer">
                    <canvas id="chamadosPorFilialChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Chart Data
            const top10ServicosData = @Html.Raw(Json.Serialize(Model.Top10Servicos));
            const prioridadeServicosData = @Html.Raw(Json.Serialize(Model.PrioridadeServicos));
            const top10UsuariosData = @Html.Raw(Json.Serialize(Model.Top10Usuarios));
            const horarioMedioAberturaData = @Html.Raw(Json.Serialize(Model.HorarioMedioAbertura));
            const chamadosPorDiaDaSemanaData = @Html.Raw(Json.Serialize(Model.ChamadosPorDiaDaSemana));
            const chamadosPorFilialData = @Html.Raw(Json.Serialize(Model.ChamadosPorFilial));

            // Persistent Filters
            const filterForm = document.querySelector('form[asp-action="Dashboard"]');
            const filterInputs = filterForm.querySelectorAll('input');

            filterForm.addEventListener('submit', function () {
                filterInputs.forEach(input => {
                    localStorage.setItem(input.name, input.value);
                });
            });

            window.addEventListener('load', function () {
                filterInputs.forEach(input => {
                    const savedValue = localStorage.getItem(input.name);
                    if (savedValue) {
                        input.value = savedValue;
                    }
                });
            });

            // Top 10 Serviços
            if (top10ServicosData.length > 0) {
                new Chart(document.getElementById('top10ServicosChart'), {
                    type: 'bar',
                    data: {
                        labels: top10ServicosData.map(d => d.label),
                        datasets: [{
                            label: 'Número de Chamados',
                            data: top10ServicosData.map(d => d.value),
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }]
                    }
                });
            } else {
                document.getElementById('top10ServicosContainer').innerHTML = '<p>Não há dados para exibir.</p>';
            }

            // Prioridade dos Serviços
            if (prioridadeServicosData.length > 0) {
                new Chart(document.getElementById('prioridadeServicosChart'), {
                    type: 'pie',
                    data: {
                        labels: prioridadeServicosData.map(d => d.label),
                        datasets: [{
                            data: prioridadeServicosData.map(d => d.value),
                            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0']
                        }]
                    }
                });
            } else {
                document.getElementById('prioridadeServicosContainer').innerHTML = '<p>Não há dados para exibir.</p>';
            }

            // Top 10 Usuários
            if (top10UsuariosData.length > 0) {
                new Chart(document.getElementById('top10UsuariosChart'), {
                    type: 'bar',
                    data: {
                        labels: top10UsuariosData.map(d => d.label),
                        datasets: [{
                            label: 'Número de Chamados Abertos',
                            data: top10UsuariosData.map(d => d.value),
                            backgroundColor: 'rgba(153, 102, 255, 0.2)',
                            borderColor: 'rgba(153, 102, 255, 1)',
                            borderWidth: 1
                        }]
                    }
                });
            } else {
                document.getElementById('top10UsuariosContainer').innerHTML = '<p>Não há dados para exibir.</p>';
            }

            // Horário Médio de Abertura
            if (horarioMedioAberturaData.length > 0) {
                new Chart(document.getElementById('horarioMedioAberturaChart'), {
                    type: 'line',
                    data: {
                        labels: horarioMedioAberturaData.map(d => d.label),
                        datasets: [{
                            label: 'Número de Chamados',
                            data: horarioMedioAberturaData.map(d => d.value),
                            backgroundColor: 'rgba(255, 159, 64, 0.2)',
                            borderColor: 'rgba(255, 159, 64, 1)',
                            borderWidth: 1
                        }]
                    }
                });
            } else {
                document.getElementById('horarioMedioAberturaContainer').innerHTML = '<p>Não há dados para exibir.</p>';
            }

            // Chamados por Dia da Semana
            if (chamadosPorDiaDaSemanaData.length > 0) {
                new Chart(document.getElementById('chamadosPorDiaDaSemanaChart'), {
                    type: 'doughnut',
                    data: {
                        labels: chamadosPorDiaDaSemanaData.map(d => d.label),
                        datasets: [{
                            data: chamadosPorDiaDaSemanaData.map(d => d.value),
                            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#C9CBCF']
                        }]
                    }
                });
            } else {
                document.getElementById('chamadosPorDiaDaSemanaContainer').innerHTML = '<p>Não há dados para exibir.</p>';
            }

            // Chamados por Filial
            if (chamadosPorFilialData.length > 0) {
                new Chart(document.getElementById('chamadosPorFilialChart'), {
                    type: 'pie',
                    data: {
                        labels: chamadosPorFilialData.map(d => d.label),
                        datasets: [{
                            data: chamadosPorFilialData.map(d => d.value),
                            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#C9CBCF']
                        }]
                    }
                });
            } else {
                document.getElementById('chamadosPorFilialContainer').innerHTML = '<p>Não há dados para exibir.</p>';
            }
        });
    </script>
}
